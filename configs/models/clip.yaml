includes:
- ../experiment_config.yaml
- ../news_clippings.yaml

dataset_config:
  foil:
    use_images: true
    use_features: false
    return_features_info: false
    option: semantics_clip_text_image
    annotations:
      train:
      - data/${dataset_config.foil.option}/train.json
      val:
      - data/${dataset_config.foil.option}/val.json
      test:
      - data/${dataset_config.foil.option}/test.json
    processors:
      text_processor:
        type: clip_tokenizer
        params:
          max_seq_length: 77
      image_processor:
        type: torchvision_transforms
        params:
          transforms:
            - type: Resize
              params:
                size: [256, 256]
                interpolation: 3
            - type: CenterCrop
              params:
                size: [224, 224]
            - ToTensor
            - GrayScaleTo3Channels

model_config:
  clip:
    num_labels: 2
    mlp_hidden_dim: 512
    mlp_num_layers: 2
    mlp_dropout: 0
    mlp_act: relu
    finetune_lr_multiplier: 1e-2
    training_head_type: classification
    losses:
    - type: cross_entropy
    freeze_lower: False
    freeze_all: False
    # ======= RN101 =======
    # clip_model_type: RN101
    # text_embedding_dim: 512
    # image_embedding_dim: 512
    # ======= ViT-B/32 =======
    clip_model_type: ViT-B/32
    text_embedding_dim: 512
    image_embedding_dim: 512
    image_only: true
    # ======= RN50 ==========
    # clip_model_type: RN50
    # text_embedding_dim: 1024
    # image_embedding_dim: 1024

optimizer:
  type: adam_w
  params:
    lr: 5e-5
    eps: 1e-8
  allow_unused_parameters: True

training:
  batch_size: 32

evaluation:
  metrics:
  - accuracy

scheduler:
  type: warmup_linear
  params:
    num_warmup_steps: 4000
    num_training_steps: 44000

env:
  experiment_name: clip_example_experiment
  save_dir: ${env.experiment_name}
  tensorboard_logdir: ${env.experiment_name}/logs/tensorboard

checkpoint:
  # max_to_keep: 1
  pretrained_state_mapping:
    model.visual: model.visual
    model.transformer: model.transformer
    model.token_embedding: model.token_embedding
    model.ln_final: model.ln_final
    model.classifier: model.classifier